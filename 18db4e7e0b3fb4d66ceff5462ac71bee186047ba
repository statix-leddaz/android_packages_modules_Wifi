{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f2278c03_fb350e69",
        "filename": "service/java/com/android/server/wifi/WifiGlobals.java",
        "patchSetId": 13
      },
      "lineNbr": 152,
      "author": {
        "id": 1039103
      },
      "writtenOn": "2024-01-04T23:23:12Z",
      "side": 1,
      "message": "This isn\u0027t necessary consider the `if (!isEnabled)`.",
      "range": {
        "startLine": 152,
        "startChar": 78,
        "endLine": 152,
        "endChar": 91
      },
      "revId": "18db4e7e0b3fb4d66ceff5462ac71bee186047ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f30fe8d6_060973da",
        "filename": "service/java/com/android/server/wifi/WifiGlobals.java",
        "patchSetId": 13
      },
      "lineNbr": 152,
      "author": {
        "id": 1039103
      },
      "writtenOn": "2024-01-04T23:23:12Z",
      "side": 1,
      "message": "Seems to replicate the `parseBoolean` below. Simpler:\n\n```\n  if (!isEnabled) {\n     ....\n  } else {\n     try {\n              mIsBackgroundScanSupported \u003d Boolean.parseBoolean(value);\n     } catch Exception() {\n              Log.xxxxx\n     }\n  }\n```\n\nNote that the above doesn\u0027t return any error codes on bad configuration. This is a side-effect of the possibly over optimization of using `BiConsumer`. Consider something much simpler.",
      "range": {
        "startLine": 152,
        "startChar": 31,
        "endLine": 152,
        "endChar": 77
      },
      "revId": "18db4e7e0b3fb4d66ceff5462ac71bee186047ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "13fbcac5_8467bcb5",
        "filename": "service/java/com/android/server/wifi/WifiGlobals.java",
        "patchSetId": 13
      },
      "lineNbr": 152,
      "author": {
        "id": 2029698
      },
      "writtenOn": "2024-01-05T10:35:49Z",
      "side": 1,
      "message": "The previous logic is if value has valid input i.e true|false then only the value is changed for mIsBackgroundScanSupported.\nAfter change, new logic if it is enabled value will be changed to true|false even if the \u003cvalue\u003e has invalid user input like null, \"\", etc. as returned by Boolean.parseBoolean(value).",
      "parentUuid": "f2278c03_fb350e69",
      "range": {
        "startLine": 152,
        "startChar": 78,
        "endLine": 152,
        "endChar": 91
      },
      "revId": "18db4e7e0b3fb4d66ceff5462ac71bee186047ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "355ccb81_4963b6d2",
        "filename": "service/java/com/android/server/wifi/WifiGlobals.java",
        "patchSetId": 13
      },
      "lineNbr": 152,
      "author": {
        "id": 2029698
      },
      "writtenOn": "2024-01-05T10:35:49Z",
      "side": 1,
      "message": "Since JAVA 1.5, parseBoolean doesnot throw ParseException it returns false for any unexpected values like null,interger,etc. So try catch block is not required.\n\nAs I understand, no return value is required as per the given logic. It takes two input and according to the isEnabled value is modified for mIsBackgroundScanSupported.\n\nApart from BiConsumer, interfaces like Bifunction returns value and takes two inputs as per the requirement.",
      "parentUuid": "f30fe8d6_060973da",
      "range": {
        "startLine": 152,
        "startChar": 31,
        "endLine": 152,
        "endChar": 77
      },
      "revId": "18db4e7e0b3fb4d66ceff5462ac71bee186047ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "39d45479_7bb989fe",
        "filename": "service/java/com/android/server/wifi/WifiGlobals.java",
        "patchSetId": 13
      },
      "lineNbr": 152,
      "author": {
        "id": 1039103
      },
      "writtenOn": "2024-01-10T17:01:39Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "355ccb81_4963b6d2",
      "range": {
        "startLine": 152,
        "startChar": 31,
        "endLine": 152,
        "endChar": 77
      },
      "revId": "18db4e7e0b3fb4d66ceff5462ac71bee186047ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "929065d1_109c4b19",
        "filename": "service/java/com/android/server/wifi/WifiGlobals.java",
        "patchSetId": 13
      },
      "lineNbr": 152,
      "author": {
        "id": 1039103
      },
      "writtenOn": "2024-01-10T17:01:39Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "13fbcac5_8467bcb5",
      "range": {
        "startLine": 152,
        "startChar": 78,
        "endLine": 152,
        "endChar": 91
      },
      "revId": "18db4e7e0b3fb4d66ceff5462ac71bee186047ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b0a7c4f_f7616e59",
        "filename": "service/java/com/android/server/wifi/WifiGlobals.java",
        "patchSetId": 13
      },
      "lineNbr": 430,
      "author": {
        "id": 1039103
      },
      "writtenOn": "2024-01-04T23:23:12Z",
      "side": 1,
      "message": "No need for an extra set of parenthesis: \n\nA || (B || C) \u003d\u003d\u003d A || B || C",
      "range": {
        "startLine": 430,
        "startChar": 18,
        "endLine": 430,
        "endChar": 20
      },
      "revId": "18db4e7e0b3fb4d66ceff5462ac71bee186047ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3f28cdec_480ab6de",
        "filename": "service/java/com/android/server/wifi/WifiGlobals.java",
        "patchSetId": 13
      },
      "lineNbr": 430,
      "author": {
        "id": 1039103
      },
      "writtenOn": "2024-01-04T23:23:12Z",
      "side": 1,
      "message": "Why is this condition valid - is an empty string not a possible correct value for an overlay?",
      "range": {
        "startLine": 430,
        "startChar": 20,
        "endLine": 430,
        "endChar": 51
      },
      "revId": "18db4e7e0b3fb4d66ceff5462ac71bee186047ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "97fdd69a_dacc3601",
        "filename": "service/java/com/android/server/wifi/WifiGlobals.java",
        "patchSetId": 13
      },
      "lineNbr": 430,
      "author": {
        "id": 2029698
      },
      "writtenOn": "2024-01-05T10:35:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2b0a7c4f_f7616e59",
      "range": {
        "startLine": 430,
        "startChar": 18,
        "endLine": 430,
        "endChar": 20
      },
      "revId": "18db4e7e0b3fb4d66ceff5462ac71bee186047ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a38516e6_919f1e2b",
        "filename": "service/java/com/android/server/wifi/WifiGlobals.java",
        "patchSetId": 13
      },
      "lineNbr": 430,
      "author": {
        "id": 2029698
      },
      "writtenOn": "2024-01-05T10:35:49Z",
      "side": 1,
      "message": "configString cannot be empty or any other value. It has to be the actual string i.e \"config_wifi_background_scan_support\".",
      "parentUuid": "3f28cdec_480ab6de",
      "range": {
        "startLine": 430,
        "startChar": 20,
        "endLine": 430,
        "endChar": 51
      },
      "revId": "18db4e7e0b3fb4d66ceff5462ac71bee186047ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43614e8c_2207fda2",
        "filename": "service/java/com/android/server/wifi/WifiGlobals.java",
        "patchSetId": 13
      },
      "lineNbr": 430,
      "author": {
        "id": 1039103
      },
      "writtenOn": "2024-01-10T17:01:39Z",
      "side": 1,
      "message": "Sorry - misplaced comment - I was referring to `value` - why can\u0027t it be empty?",
      "parentUuid": "a38516e6_919f1e2b",
      "range": {
        "startLine": 430,
        "startChar": 20,
        "endLine": 430,
        "endChar": 51
      },
      "revId": "18db4e7e0b3fb4d66ceff5462ac71bee186047ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8fa46027_939d8302",
        "filename": "service/java/com/android/server/wifi/WifiGlobals.java",
        "patchSetId": 13
      },
      "lineNbr": 430,
      "author": {
        "id": 2029698
      },
      "writtenOn": "2024-01-11T11:26:08Z",
      "side": 1,
      "message": "value for the specific overlay cannot be empty. If \u003cvalue\u003e\u003dtrue|false then only the force overlay changes the value otherwise for any other unwanted value it takes the default from resource file.",
      "parentUuid": "43614e8c_2207fda2",
      "range": {
        "startLine": 430,
        "startChar": 20,
        "endLine": 430,
        "endChar": 51
      },
      "revId": "18db4e7e0b3fb4d66ceff5462ac71bee186047ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "51991cb1_9b566f3c",
        "filename": "service/java/com/android/server/wifi/WifiGlobals.java",
        "patchSetId": 13
      },
      "lineNbr": 430,
      "author": {
        "id": 1368080
      },
      "writtenOn": "2024-01-11T11:41:08Z",
      "side": 1,
      "message": "Not correct.\n\nThe empty string may be a valid value for other overlay configuration. We should remove the empty check in the function forceOverlayConfigValue since it is checked in the BiFunction which can be customized for different overlay configuration.",
      "parentUuid": "8fa46027_939d8302",
      "range": {
        "startLine": 430,
        "startChar": 20,
        "endLine": 430,
        "endChar": 51
      },
      "revId": "18db4e7e0b3fb4d66ceff5462ac71bee186047ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "80c5d657_7830a2d9",
        "filename": "service/java/com/android/server/wifi/WifiShellCommand.java",
        "patchSetId": 13
      },
      "lineNbr": 2633,
      "author": {
        "id": 1039103
      },
      "writtenOn": "2024-01-04T23:23:12Z",
      "side": 1,
      "message": "this string is the actual string that users should type. IIUC users should not type commas \",\" - please remove.",
      "range": {
        "startLine": 2633,
        "startChar": 56,
        "endLine": 2633,
        "endChar": 58
      },
      "revId": "18db4e7e0b3fb4d66ceff5462ac71bee186047ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3031f6b0_0f3b4564",
        "filename": "service/java/com/android/server/wifi/WifiShellCommand.java",
        "patchSetId": 13
      },
      "lineNbr": 2633,
      "author": {
        "id": 1039103
      },
      "writtenOn": "2024-01-04T23:23:12Z",
      "side": 1,
      "message": "Is this optional? That\u0027s the implication of \"[]\".\n\nIf mandatory: \"enable|disable\" \u003c----- [it\u0027s mandatory]\nIf optional: \"[enable|disable]\"\n\nThen fix the \"isEnabled\" line #2639 below. E.g.:\n```\n  enable|disable: mandatory. Use `enable` to use the \u003cvalue\u003e to override the overlay. Use `disable` to reset the override and use the value from the resource file.\n```",
      "range": {
        "startLine": 2633,
        "startChar": 74,
        "endLine": 2633,
        "endChar": 85
      },
      "revId": "18db4e7e0b3fb4d66ceff5462ac71bee186047ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd945b1d_709878e5",
        "filename": "service/java/com/android/server/wifi/WifiShellCommand.java",
        "patchSetId": 13
      },
      "lineNbr": 2633,
      "author": {
        "id": 1039103
      },
      "writtenOn": "2024-01-04T23:23:12Z",
      "side": 1,
      "message": "The format for user input is something like \"\u003cconfig_string\u003e\".",
      "range": {
        "startLine": 2633,
        "startChar": 59,
        "endLine": 2633,
        "endChar": 71
      },
      "revId": "18db4e7e0b3fb4d66ceff5462ac71bee186047ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "39983330_63e299d2",
        "filename": "service/java/com/android/server/wifi/WifiShellCommand.java",
        "patchSetId": 13
      },
      "lineNbr": 2633,
      "author": {
        "id": 2029698
      },
      "writtenOn": "2024-01-05T10:35:49Z",
      "side": 1,
      "message": "The format \"\u003cconfig_string\u003e\" is giving compilation error inside the pw.println statement.",
      "parentUuid": "dd945b1d_709878e5",
      "range": {
        "startLine": 2633,
        "startChar": 59,
        "endLine": 2633,
        "endChar": 71
      },
      "revId": "18db4e7e0b3fb4d66ceff5462ac71bee186047ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00c23de6_b2d9cd78",
        "filename": "service/java/com/android/server/wifi/WifiShellCommand.java",
        "patchSetId": 13
      },
      "lineNbr": 2633,
      "author": {
        "id": 2029698
      },
      "writtenOn": "2024-01-05T10:35:49Z",
      "side": 1,
      "message": "force-overlay-config-value requires three mandatory parameters value, configString and isEnabled. The values required for the fields are also described.",
      "parentUuid": "3031f6b0_0f3b4564",
      "range": {
        "startLine": 2633,
        "startChar": 74,
        "endLine": 2633,
        "endChar": 85
      },
      "revId": "18db4e7e0b3fb4d66ceff5462ac71bee186047ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c9a9ccf2_ce7b346e",
        "filename": "service/java/com/android/server/wifi/WifiShellCommand.java",
        "patchSetId": 13
      },
      "lineNbr": 2633,
      "author": {
        "id": 2029698
      },
      "writtenOn": "2024-01-05T10:35:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "80c5d657_7830a2d9",
      "range": {
        "startLine": 2633,
        "startChar": 56,
        "endLine": 2633,
        "endChar": 58
      },
      "revId": "18db4e7e0b3fb4d66ceff5462ac71bee186047ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9ba76a07_f4ac26e2",
        "filename": "service/java/com/android/server/wifi/WifiShellCommand.java",
        "patchSetId": 13
      },
      "lineNbr": 2633,
      "author": {
        "id": 1039103
      },
      "writtenOn": "2024-01-10T17:01:39Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "00c23de6_b2d9cd78",
      "range": {
        "startLine": 2633,
        "startChar": 74,
        "endLine": 2633,
        "endChar": 85
      },
      "revId": "18db4e7e0b3fb4d66ceff5462ac71bee186047ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}